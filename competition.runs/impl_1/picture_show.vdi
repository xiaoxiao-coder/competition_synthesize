#-----------------------------------------------------------
# Vivado v2018.3 (64-bit)
# SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
# Start of session at: Sun Nov 24 21:50:52 2019
# Process ID: 33240
# Current directory: D:/competition_synthesize/competition.runs/impl_1
# Command line: vivado.exe -log picture_show.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source picture_show.tcl -notrace
# Log file: D:/competition_synthesize/competition.runs/impl_1/picture_show.vdi
# Journal file: D:/competition_synthesize/competition.runs/impl_1\vivado.jou
#-----------------------------------------------------------
source picture_show.tcl -notrace
Command: link_design -top picture_show -part xc7a35tcsg324-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Project 1-454] Reading design checkpoint 'd:/competition_synthesize/competition.srcs/sources_1/ip/Shift_RAM_3x3_bit/Shift_RAM_3x3_bit.dcp' for cell 'u_Img_Processor/Erosion_inst/u_Shift_RAM_3x3_1bit/u1_Shift_RAM_3x3_bit'
INFO: [Project 1-454] Reading design checkpoint 'd:/competition_synthesize/competition.srcs/sources_1/ip/Shift_RAM_3X3_8bit/Shift_RAM_3X3_8bit.dcp' for cell 'u_Img_Processor/Sobel_Edge_Detect_inst/u_Shift_RAM_3X3/u1_Shift_RAM_3X3_8bit'
INFO: [Project 1-454] Reading design checkpoint 'd:/competition_synthesize/competition.srcs/sources_1/ip/div_gen_32bit/div_gen_32bit.dcp' for cell 'u_Img_Processor/u_hu_martix/u1_div_gen_32bit'
INFO: [Project 1-454] Reading design checkpoint 'd:/competition_synthesize/competition.srcs/sources_1/ip/div_gen_0/div_gen_0.dcp' for cell 'u_Img_Processor/u_hu_martix/u2_div_gen_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/competition_synthesize/competition.srcs/sources_1/ip/blk_mem_gen_0_1/blk_mem_gen_0.dcp' for cell 'u_ov7725/design_1_blk_mem_gen_0_0'
INFO: [Netlist 29-17] Analyzing 1843 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2018.3
INFO: [Device 21-403] Loading part xc7a35tcsg324-1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [D:/competition_synthesize/competition.srcs/constrs_1/new/competition.xdc]
Finished Parsing XDC File [D:/competition_synthesize/competition.srcs/constrs_1/new/competition.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.021 . Memory (MB): peak = 768.457 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 1 instances were transformed.
  IOBUF => IOBUF (IBUF, OBUFT): 1 instances

12 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:13 ; elapsed = 00:00:15 . Memory (MB): peak = 768.457 ; gain = 412.008
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.920 . Memory (MB): peak = 776.199 ; gain = 7.742

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 11e6e9f0b

Time (s): cpu = 00:00:10 ; elapsed = 00:00:10 . Memory (MB): peak = 1354.648 ; gain = 578.449

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 2 inverter(s) to 22 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 207cb8888

Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 1454.633 ; gain = 0.000
INFO: [Opt 31-389] Phase Retarget created 2 cells and removed 6 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 2051e74cd

Time (s): cpu = 00:00:01 ; elapsed = 00:00:02 . Memory (MB): peak = 1454.633 ; gain = 0.000
INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 0 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 20ba2a72a

Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 1454.633 ; gain = 0.000
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 648 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 20ba2a72a

Time (s): cpu = 00:00:03 ; elapsed = 00:00:04 . Memory (MB): peak = 1454.633 ; gain = 0.000
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
Phase 5 Shift Register Optimization | Checksum: 29b72676c

Time (s): cpu = 00:00:06 ; elapsed = 00:00:06 . Memory (MB): peak = 1454.633 ; gain = 0.000
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 29b72676c

Time (s): cpu = 00:00:06 ; elapsed = 00:00:07 . Memory (MB): peak = 1454.633 ; gain = 0.000
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |               2  |               6  |                                              0  |
|  Constant propagation         |               0  |               0  |                                              0  |
|  Sweep                        |               0  |             648  |                                              0  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                              0  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.058 . Memory (MB): peak = 1454.633 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 29b72676c

Time (s): cpu = 00:00:06 ; elapsed = 00:00:07 . Memory (MB): peak = 1454.633 ; gain = 0.000

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=0.000 | TNS=0.000 |
WARNING: [Power 33-232] No user defined clocks were found in the design!
Resolution: Please specify clocks using create_clock/create_generated_clock for sequential elements. For pure combinatorial circuits, please specify a virtual clock, otherwise the vectorless estimation might be inaccurate
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 38 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 59 newly gated: 38 Total Ports: 76
Number of Flops added for Enable Generation: 1

Ending PowerOpt Patch Enables Task | Checksum: 209f8e7d0

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.371 . Memory (MB): peak = 1820.336 ; gain = 0.000
Ending Power Optimization Task | Checksum: 209f8e7d0

Time (s): cpu = 00:00:16 ; elapsed = 00:00:11 . Memory (MB): peak = 1820.336 ; gain = 365.703

Starting Final Cleanup Task

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Logic Optimization Task | Checksum: 1ffbe5100

Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 1820.336 ; gain = 0.000
Ending Final Cleanup Task | Checksum: 1ffbe5100

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 1820.336 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1820.336 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: 1ffbe5100

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1820.336 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
35 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:40 ; elapsed = 00:00:34 . Memory (MB): peak = 1820.336 ; gain = 1051.879
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.015 . Memory (MB): peak = 1820.336 ; gain = 0.000
Writing placer database...
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.064 . Memory (MB): peak = 1820.336 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.025 . Memory (MB): peak = 1820.336 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'D:/competition_synthesize/competition.runs/impl_1/picture_show_opt.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file picture_show_drc_opted.rpt -pb picture_show_drc_opted.pb -rpx picture_show_drc_opted.rpx
Command: report_drc -file picture_show_drc_opted.rpt -pb picture_show_drc_opted.pb -rpx picture_show_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file D:/competition_synthesize/competition.runs/impl_1/picture_show_drc_opted.rpt.
report_drc completed successfully
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1820.336 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 14ad6f8a9

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.119 . Memory (MB): peak = 1820.336 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.015 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 807b3bdb

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 13180bd01

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 13180bd01

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 1820.336 ; gain = 0.000
Phase 1 Placer Initialization | Checksum: 13180bd01

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 13180bd01

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 1820.336 ; gain = 0.000
WARNING: [Place 46-29] place_design is not in timing mode. Skip physical synthesis in placer
Phase 2 Global Placement | Checksum: 11e92d3b4

Time (s): cpu = 00:00:19 ; elapsed = 00:00:16 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 11e92d3b4

Time (s): cpu = 00:00:19 ; elapsed = 00:00:16 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1acf25d3f

Time (s): cpu = 00:00:20 ; elapsed = 00:00:17 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 15db78de2

Time (s): cpu = 00:00:20 ; elapsed = 00:00:18 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 19fb157d6

Time (s): cpu = 00:00:20 ; elapsed = 00:00:18 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 6e417716

Time (s): cpu = 00:00:23 ; elapsed = 00:00:21 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: 6e417716

Time (s): cpu = 00:00:24 ; elapsed = 00:00:22 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: c5ef0a2c

Time (s): cpu = 00:00:24 ; elapsed = 00:00:22 . Memory (MB): peak = 1820.336 ; gain = 0.000
Phase 3 Detail Placement | Checksum: c5ef0a2c

Time (s): cpu = 00:00:24 ; elapsed = 00:00:22 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
Phase 4.1 Post Commit Optimization | Checksum: c5ef0a2c

Time (s): cpu = 00:00:25 ; elapsed = 00:00:22 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: c5ef0a2c

Time (s): cpu = 00:00:25 ; elapsed = 00:00:23 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: c5ef0a2c

Time (s): cpu = 00:00:25 ; elapsed = 00:00:23 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1820.336 ; gain = 0.000
Phase 4.4 Final Placement Cleanup | Checksum: f721650f

Time (s): cpu = 00:00:25 ; elapsed = 00:00:23 . Memory (MB): peak = 1820.336 ; gain = 0.000
Phase 4 Post Placement Optimization and Clean-Up | Checksum: f721650f

Time (s): cpu = 00:00:25 ; elapsed = 00:00:23 . Memory (MB): peak = 1820.336 ; gain = 0.000
Ending Placer Task | Checksum: d0b99f75

Time (s): cpu = 00:00:25 ; elapsed = 00:00:23 . Memory (MB): peak = 1820.336 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
51 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:00:27 ; elapsed = 00:00:25 . Memory (MB): peak = 1820.336 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1820.336 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.023 . Memory (MB): peak = 1820.336 ; gain = 0.000
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:05 ; elapsed = 00:00:02 . Memory (MB): peak = 1820.336 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'D:/competition_synthesize/competition.runs/impl_1/picture_show_placed.dcp' has been generated.
INFO: [runtcl-4] Executing : report_io -file picture_show_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.102 . Memory (MB): peak = 1820.336 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file picture_show_utilization_placed.rpt -pb picture_show_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file picture_show_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.268 . Memory (MB): peak = 1820.336 ; gain = 0.000
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: 5b68f309 ConstDB: 0 ShapeSum: 7550ac6c RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 11423ba90

Time (s): cpu = 00:00:24 ; elapsed = 00:00:20 . Memory (MB): peak = 1820.336 ; gain = 0.000
Post Restoration Checksum: NetGraph: e113817d NumContArr: 33103913 Constraints: 0 Timing: 0

Phase 2 Router Initialization
INFO: [Route 35-64] No timing constraints were detected. The router will operate in resource-optimization mode.

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: 11423ba90

Time (s): cpu = 00:00:24 ; elapsed = 00:00:20 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: 11423ba90

Time (s): cpu = 00:00:24 ; elapsed = 00:00:20 . Memory (MB): peak = 1820.336 ; gain = 0.000
 Number of Nodes with overlaps = 0
Phase 2 Router Initialization | Checksum: a327f941

Time (s): cpu = 00:00:25 ; elapsed = 00:00:21 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: f732351b

Time (s): cpu = 00:00:27 ; elapsed = 00:00:22 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 275
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
Phase 4.1 Global Iteration 0 | Checksum: 17c84b59a

Time (s): cpu = 00:00:29 ; elapsed = 00:00:24 . Memory (MB): peak = 1820.336 ; gain = 0.000
Phase 4 Rip-up And Reroute | Checksum: 17c84b59a

Time (s): cpu = 00:00:29 ; elapsed = 00:00:24 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 5 Delay and Skew Optimization
Phase 5 Delay and Skew Optimization | Checksum: 17c84b59a

Time (s): cpu = 00:00:29 ; elapsed = 00:00:24 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter
Phase 6.1 Hold Fix Iter | Checksum: 17c84b59a

Time (s): cpu = 00:00:29 ; elapsed = 00:00:24 . Memory (MB): peak = 1820.336 ; gain = 0.000
Phase 6 Post Hold Fix | Checksum: 17c84b59a

Time (s): cpu = 00:00:29 ; elapsed = 00:00:24 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 4.19094 %
  Global Horizontal Routing Utilization  = 5.07054 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Congestion Report
North Dir 1x1 Area, Max Cong = 43.2432%, No Congested Regions.
South Dir 1x1 Area, Max Cong = 44.1441%, No Congested Regions.
East Dir 1x1 Area, Max Cong = 54.4118%, No Congested Regions.
West Dir 1x1 Area, Max Cong = 47.0588%, No Congested Regions.

------------------------------
Reporting congestion hotspots
------------------------------
Direction: North
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 0
Direction: South
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 0
Direction: East
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 0
Direction: West
----------------
Congested clusters found at Level 0
Effective congestion level: 0 Aspect Ratio: 1 Sparse Ratio: 0

Phase 7 Route finalize | Checksum: 17c84b59a

Time (s): cpu = 00:00:29 ; elapsed = 00:00:24 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 17c84b59a

Time (s): cpu = 00:00:29 ; elapsed = 00:00:24 . Memory (MB): peak = 1820.336 ; gain = 0.000

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1922473d8

Time (s): cpu = 00:00:31 ; elapsed = 00:00:25 . Memory (MB): peak = 1820.336 ; gain = 0.000
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:00:31 ; elapsed = 00:00:25 . Memory (MB): peak = 1820.336 ; gain = 0.000

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
64 Infos, 2 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:00:35 ; elapsed = 00:00:27 . Memory (MB): peak = 1820.336 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1820.336 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.020 . Memory (MB): peak = 1820.336 ; gain = 0.000
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:06 ; elapsed = 00:00:02 . Memory (MB): peak = 1820.336 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'D:/competition_synthesize/competition.runs/impl_1/picture_show_routed.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file picture_show_drc_routed.rpt -pb picture_show_drc_routed.pb -rpx picture_show_drc_routed.rpx
Command: report_drc -file picture_show_drc_routed.rpt -pb picture_show_drc_routed.pb -rpx picture_show_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file D:/competition_synthesize/competition.runs/impl_1/picture_show_drc_routed.rpt.
report_drc completed successfully
INFO: [runtcl-4] Executing : report_methodology -file picture_show_methodology_drc_routed.rpt -pb picture_show_methodology_drc_routed.pb -rpx picture_show_methodology_drc_routed.rpx
Command: report_methodology -file picture_show_methodology_drc_routed.rpt -pb picture_show_methodology_drc_routed.pb -rpx picture_show_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file D:/competition_synthesize/competition.runs/impl_1/picture_show_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 1820.336 ; gain = 0.000
INFO: [runtcl-4] Executing : report_power -file picture_show_power_routed.rpt -pb picture_show_power_summary_routed.pb -rpx picture_show_power_routed.rpx
Command: report_power -file picture_show_power_routed.rpt -pb picture_show_power_summary_routed.pb -rpx picture_show_power_routed.rpx
WARNING: [Power 33-232] No user defined clocks were found in the design!
Resolution: Please specify clocks using create_clock/create_generated_clock for sequential elements. For pure combinatorial circuits, please specify a virtual clock, otherwise the vectorless estimation might be inaccurate
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
76 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
INFO: [runtcl-4] Executing : report_route_status -file picture_show_route_status.rpt -pb picture_show_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file picture_show_timing_summary_routed.rpt -pb picture_show_timing_summary_routed.pb -rpx picture_show_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
WARNING: [Timing 38-313] There are no user specified timing constraints. Timing constraints are needed for proper timing analysis.
INFO: [runtcl-4] Executing : report_incremental_reuse -file picture_show_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file picture_show_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file picture_show_bus_skew_routed.rpt -pb picture_show_bus_skew_routed.pb -rpx picture_show_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
Command: write_bitstream -force picture_show.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7a35t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a35t'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC CFGBVS-1] Missing CFGBVS and CONFIG_VOLTAGE Design Properties: Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/u_00_power_20 input u_Img_Processor/u_hu_martix/u_00_power_20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/u_00_power_20 input u_Img_Processor/u_hu_martix/u_00_power_20/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 input u_Img_Processor/u_hu_martix/u_00_power_20__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 input u_Img_Processor/u_hu_martix/u_00_power_20__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/u_00_power_20__1 input u_Img_Processor/u_hu_martix/u_00_power_20__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/u_00_power_20__1 input u_Img_Processor/u_hu_martix/u_00_power_20__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020 input u_Img_Processor/u_hu_martix/xy_power_020/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020 input u_Img_Processor/u_hu_martix/xy_power_020/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020__0 input u_Img_Processor/u_hu_martix/xy_power_020__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020__0 input u_Img_Processor/u_hu_martix/xy_power_020__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 input u_Img_Processor/u_hu_martix/xy_power_020__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 input u_Img_Processor/u_hu_martix/xy_power_020__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020__2 input u_Img_Processor/u_hu_martix/xy_power_020__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020__2 input u_Img_Processor/u_hu_martix/xy_power_020__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200 input u_Img_Processor/u_hu_martix/xy_power_200/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200 input u_Img_Processor/u_hu_martix/xy_power_200/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200__0 input u_Img_Processor/u_hu_martix/xy_power_200__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200__0 input u_Img_Processor/u_hu_martix/xy_power_200__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 input u_Img_Processor/u_hu_martix/xy_power_200__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 input u_Img_Processor/u_hu_martix/xy_power_200__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200__2 input u_Img_Processor/u_hu_martix/xy_power_200__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200__2 input u_Img_Processor/u_hu_martix/xy_power_200__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output u_Img_Processor/u_hu_martix/u_00_power_20__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020 output u_Img_Processor/u_hu_martix/xy_power_020/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output u_Img_Processor/u_hu_martix/xy_power_020__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200 output u_Img_Processor/u_hu_martix/xy_power_200/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output u_Img_Processor/u_hu_martix/xy_power_200__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/u_00_power_20 multiplier stage u_Img_Processor/u_hu_martix/u_00_power_20/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 multiplier stage u_Img_Processor/u_hu_martix/u_00_power_20__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/u_00_power_20__1 multiplier stage u_Img_Processor/u_hu_martix/u_00_power_20__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020 multiplier stage u_Img_Processor/u_hu_martix/xy_power_020/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020__0 multiplier stage u_Img_Processor/u_hu_martix/xy_power_020__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 multiplier stage u_Img_Processor/u_hu_martix/xy_power_020__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_020__2 multiplier stage u_Img_Processor/u_hu_martix/xy_power_020__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200 multiplier stage u_Img_Processor/u_hu_martix/xy_power_200/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200__0 multiplier stage u_Img_Processor/u_hu_martix/xy_power_200__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 multiplier stage u_Img_Processor/u_hu_martix/xy_power_200__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_Img_Processor/u_hu_martix/xy_power_200__2 multiplier stage u_Img_Processor/u_hu_martix/xy_power_200__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[0]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[10]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[11]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[12]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[13]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[14]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[15]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[16]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[1]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[2]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[3]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[4]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[5]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[6]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[7]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[8]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/u_00_power_20__0 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/u_00_power_2_reg[9]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[0]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[10]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[11]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[12]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[13]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[14]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[15]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[16]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[1]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[2]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[3]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[4]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[5]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[6]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[7]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[8]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_020__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_02_reg[9]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[0]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[10]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[11]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[12]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[13]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[14]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[15]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[16]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[1]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[2]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[3]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[4]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[5]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[6]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[7]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[8]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP u_Img_Processor/u_hu_martix/xy_power_200__1 output is connected to registers with an asynchronous reset (u_Img_Processor/u_hu_martix/xy_power_20_reg[9]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC PDRC-153] Gated clock check: Net u_Img_Processor/dx_reg[6]_i_2_n_0 is a gated clock net sourced by a combinational pin u_Img_Processor/dx_reg[6]_i_2/O, cell u_Img_Processor/dx_reg[6]_i_2. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 125 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./picture_show.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-83] Releasing license: Implementation
95 Infos, 129 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:27 ; elapsed = 00:00:28 . Memory (MB): peak = 2234.742 ; gain = 410.656
INFO: [Common 17-206] Exiting Vivado at Sun Nov 24 21:53:41 2019...
